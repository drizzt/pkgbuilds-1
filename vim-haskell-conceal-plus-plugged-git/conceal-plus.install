_gitname=vim-haskellConcealPlus

pre_install() {
  post_remove
}

post_install() {
  printf "%b\n" "$concealplus"
}

pre_upgrade() {
  post_remove
}

post_upgrade() {
  post_install
}

post_remove() {
  echo -n "Removing $_gitname directory... "
  rm -rf "$HOME/.vim/plugged/$_gitname"
  echo "done"
}

read -d '' concealplus <<'EOF'
vim-haskell-conceal+
====================

Available Options

These flags can be specified via hscoptions variable. For example:

    let hscoptions="fc"

'q' option to disable concealing of scientific constants (e.g. π).
'A' option to not try to preserve indentation.
's' option to disable space consumption after ∑,∏,√ and ¬ functions.
'*' option to enable concealing of asterisk with '⋅' sign.
'x' option to disable default concealing of asterisk with '×' sign.
'E' option to enable ellipsis concealing with ‥  (two dot leader).
'e' option to disable ellipsis concealing with … (ellipsis sign).
'r' option to disable return (η) and join (µ) concealing.
'b' option to disable bind (left and right) concealing
'f' option to enable formal (★) right bind concealing
'c' option to enable encircled b/d (ⓑ/ⓓ) for right and left binds.
'h' option to enable partial concealing of binds (e.g. »=).
'C' option to enable encircled 'm' letter ⓜ concealing for fmap.
'l' option to disable fmap/lift concealing with ↥.
'w' option to disable 'where' concealing with "due to"/∵ symbol.
'-' option to disable subtract/(-) concealing with ⊟.
'I' option to enable alternative ':+' concealing with with ⨢.
'i' option to disable default concealing of ':+' with ⅈ.
'R' option to disable realPart/imagPart concealing with ℜ/ℑ.
'T' option to enable True/False constants concealing with bold 𝐓/𝐅.
't' option to disable True/False constants concealing with italic 𝑇/𝐹.
'B' option to disable Bool type to 𝔹 concealing
'Q' option to disable Rational type to ℚ concealing.
'Z' option to disable Integer type to ℤ concealing.
'1' option to disable numeric superscripts concealing, e.g. x².
'a' option to disable alphabet superscripts concealing, e.g. xⁿ.
EOF
