_gitname=vim-wordy

pre_install() {
  post_remove
}

post_install() {
  printf "%b\n" "$wordy"
}

pre_upgrade() {
  post_remove
}

post_upgrade() {
  post_install
}

post_remove() {
  echo -n "Removing $_gitname directory... "
  rm -rf "$HOME/.vim/plugged/$_gitname"
  echo "done"
}

read -d '' wordy <<'EOF'
Wordy
=====

Configuration
-------------

On demand
---------

Using this plugin’s commands does not require any special configuration.

Important note: on the first use of each of the plugin’s dictionaries,
a spell file will be built. This produces a message that resembles:

    Reading word file /Users/reede/.vim/bundle/vim-wordy/data/en/weasel.dic ...
    Compressing word tree...
    Compressed 618 of 1738 nodes; 1120 (64%) remaining
    Writing spell file /Users/reede/.vim/bundle/vim-wordy/spell/weasel.en.utf-8.spl ...
    Done!
    Estimated runtime memory use: 5600 bytes
    Press ENTER or type command to continue

As instructed, press the enter key and it will disturb you no longer,
at least until wordy feels the urge to build again.

Ring navigation
---------------

Define your own ring of dictionaries, overriding the default one in
your .vimrc:

    let g:wordy#ring = [
      \ 'weak',
      \ ['being', 'passive-voice', ],
      \ 'business-jargon',
      \ 'weasel',
      \ 'puffery',
      \ ['problematic', 'redundant', ],
      \ ['colloquial', 'idiomatic', 'similies', ],
      \ 'art-jargon',
      \ ['contractions', 'opinion', 'vague-time', 'said-synonyms', ],
      \ ]

You can navigate the ring with the following commands:

    :NextWordy
    :PrevWordy

Optionally map a key in your .vimrc to rapidly cycle through the ring's
dictionaries:

    nnoremap <silent> K :NextWordy<cr>

**NEW** - You can browse through a flattened list of dictionaries
specified in your ring with:

    :Wordy <tab>

Using wordy
-----------

You’ll use the commands that follow to enable wordy. To disable it
and restore your previous spell environment, enter the command:

    :NoWordy

Use Vim’s Normal mode commands for navigating misspelled words to go
to those words flagged by wordy.

    ]s      " Move to next misspelled word after the cursor.
    [s      " Like ]s but search backwards

Weak and lazy usage
-------------------

    :Wordy weak

Weak and lazy words are common in first drafts.

We sabotage our writing though weak language, kicking the legs out from
beneath our verbs and tearing at the foundations of our nouns, watering
down the very points that we are trying to drive home.

    “I got up and went to work.” (weak)
    “I awoke and walked to work.” (better)

We diminish the weight of our ideas by adding modifiers and fillers.

    “The regiment that took the hill was perhaps a hundred strong.” (weak)
    “Despite heavy losses, the regiment took the hill.” (better)

Words can also be weakened through overuse.

    “He actually drove to work in the blizzard.” (weak)
    “He drove to work in spite of the blizzard.” (better)

When using this dictionary, scrutinize each highlighted word or phrase,
asking whether it detracts from the point you are trying to make.

Redundant and problematic usage
-------------------------------

    :Wordy redundant
    :Wordy problematic

Did you ever receive an ‘advance warning’ when a mere warning
would do?  Why plan when you can ‘plan ahead’? Why need a thought
to ‘occur to you’ when the thought can merely ‘occur’?

But redundancies may not actually be redundant: ‘invited guests’ may
not if some of the guests have crashed your event. Or dialect differences
can erase redundancies, as the British will ‘protest against’ where
Americans will simply ‘protest’.

See 50 Problem Words and Phrases for more detail on those issues
targeted by problematic:

    http://www.dailywritingtips.com/50-problem-words-and-phrases/

Puffery and Jargon
------------------

> “The man embodies authenticity; his disruptive ideas on
> self-actualization reflect his dynamic and transformative
> personality.” (puffery and jargon)

    :Wordy puffery
    :Wordy business-jargon
    :Wordy art-jargon

Instead of puffery, demonstrate through details.

    “The Empire State Building is breathtakingly tall.” (puffery)
    “My ears popped several times during the rapid ascent to the 80th floor.” (better)

Manipulative language
---------------------

    :Wordy weasel

Words can be used to hide or obscure a weak position, or to cast doubt
on a strong one. They can be used to mislead, to evade blame, or to
claim credit where none has been earned.

    “mistakes were made”
    “discounted up to 50% off”
    “most voters feel that my opponent can’t be trusted”

Assuming that you’re not intentionally trying to manipulate others,
you will seek to purge such loaded language from your writing.

To be and the passive voice
---------------------------

    :Wordy being
    :Wordy passive-voice

You may find this dictionary useful in avoiding overuse of the many
forms of the verb to be, often found in overly-passive sentences.

Colloquialisms, Idioms, and Similies
------------------------------------

    :Wordy colloquial
    :Wordy idiomatic
    :Wordy similies

Dictionaries for uncovering the tired cliché, including colloquial and
idiomatic phrases scraped from Wiktionary and Wikipedia.

Miscellaneous
-------------

    :Wordy said-synonyms
    :Wordy opinion
    :Wordy contractions
    :Wordy vague-time

A few dictionaries to serve specific needs.

If you’re writing to be neutral, you will want to avoid editorializing
(opinion) and loaded use of ‘said’ (said-synonyms).

If you’re writing formally, you’ll want to identify unintentional
contractions with contractions. A warning that it’s not yet capturing
most instances of “’s”, such as “Joe’s not here.”

And finally, vague-time finds where you are using vague descriptions of
time where you could be more specific.

See also
--------

Words To Avoid in Creative Writing - a brief guide to usage by writer Cary Morton:

    http://darlingmionette.deviantart.com/art/Words-To-Avoid-152886782

If you find this plugin useful, you may want to check out these others
by @reedes:

* vim-colors-pencil - color scheme for Vim inspired by IA Writer
* vim-lexical - building on Vim’s spell-check and thesaurus/dictionary completion
* vim-litecorrect - lightweight auto-correction for Vim
* vim-one - make use of Vim’s +clientserver capabilities
* vim-pencil - rethinking Vim as a tool for writers
* vim-textobj-quote - extends Vim to support typographic (‘curly’) quotes
* vim-textobj-sentence - improving on Vim's native sentence motion command
* vim-thematic - modify Vim’s appearance to suit your task and environment
* vim-wheel - screen-anchored cursor movement for Vim

Future development
------------------

This early version targets English usage issues and utf-8 encoding.
Support for other languages will be added if there’s interest. (Hint:
pull requests!)

wordy is a work in progress. If you’ve spotted a problem or have an idea
on improving this plugin, please post it to the github project issue page.
Contributions are welcome.
EOF
